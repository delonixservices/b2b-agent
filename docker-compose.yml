version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: b2b-agent-backend
    ports:
      - "3334:3334"
    environment:
      - NODE_ENV=production
      - PORT=3334
      - MONGODB_URI=mongodb://mongodb:27017/b2b_agent
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_AUTH=1956
      - JWT_SECRET=your_super_secret_jwt_key_here
      - JWT_EXPIRES_IN=86400
      - HOTEL_APIURL=https://api.hotels.com/v1
      - HOTEL_APIAUTH=your_hotel_api_auth_key_here
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your_email@gmail.com
      - SMTP_PASS=your_app_password_here
      - CCAVENUE_MERCHANT_ID=your_merchant_id
      - CCAVENUE_ACCESS_CODE=your_access_code
      - CCAVENUE_WORKING_KEY=your_working_key
      - CCAVENUE_API_URL=https://test.ccavenue.com/transaction/transaction.do?command=initiateTransaction
      - MAX_FILE_SIZE=5242880
      - ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf
      - UPLOAD_DIR=./uploads
      - RATE_LIMIT_WINDOW=900000
      - RATE_LIMIT_MAX=100
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
      - LOG_LEVEL=info
      - AUTOSUGGEST_CACHE_TTL=7200
      - BCRYPT_SALT_ROUNDS=12
      - SESSION_SECRET=your_session_secret_here
      - DEBUG=false
      - ENABLE_API_DOCS=true
      - FORCE_HTTPS=false
      - TRUST_PROXY=false
    volumes:
      - ./back/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - b2b-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: b2b-agent-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=b2b_agent
    volumes:
      - mongodb_data:/data/db
      - ./back/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - b2b-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: b2b-agent-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass 1956
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - b2b-network

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: b2b-agent-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - b2b-network
    profiles:
      - dev

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: b2b-agent-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:1956
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - b2b-network
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  b2b-network:
    driver: bridge 